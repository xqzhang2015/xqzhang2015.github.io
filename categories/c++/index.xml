<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on To be foolish - xqzhang2015</title>
    <link>https://xqzhang2015.github.io/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on To be foolish - xqzhang2015</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 11 Sep 2018 11:42:31 +0000</lastBuildDate>
    
	<atom:link href="https://xqzhang2015.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>iTerm2 &#43; zsh</title>
      <link>https://xqzhang2015.github.io/post/tool/iterm_zsh/</link>
      <pubDate>Tue, 11 Sep 2018 11:42:31 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/tool/iterm_zsh/</guid>
      <description>iTerm2 + zsh Install powerline/fonts powerline/fonts: Patched fonts for Powerline users. Here we install it to support agnoster.zsh-theme.
powerline/fonts git repo
Install by git-clone and run install.sh
1 2 3 4 5 6 7 8  # clone git clone https://github.com/powerline/fonts.git --depth=1 # install cd fonts ./install.sh # clean-up a bit (optional) cd .. rm -rf fonts   iTerm2 preference configuration To test if your terminal and font support agnoster.</description>
    </item>
    
    <item>
      <title>The journal of debug lightty access log not appending</title>
      <link>https://xqzhang2015.github.io/post/arch/lightty/</link>
      <pubDate>Mon, 03 Sep 2018 11:42:31 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/arch/lightty/</guid>
      <description>What I learned Why O_APPEND is needed: multiple process write the same file O_APPEND Before each write(2), the file offset is positioned at the end of the file, as if with lseek(2). The modification of the file offset and the write operation are performed as a single atomic step. fcntl(fd, F_SETFL, O_NONBLOCK); It will clear all file status flags firstly. UML: user mode linux With it, we could GDB linux</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 15.动态规划</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter15_dynamic_schedule/</link>
      <pubDate>Sat, 30 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter15_dynamic_schedule/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 10.平衡搜索树-红黑树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter10_rbtree/</link>
      <pubDate>Sun, 15 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter10_rbtree/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 9.二叉搜索树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter09_search_tree/</link>
      <pubDate>Thu, 12 Jun 2014 10:57:12 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter09_search_tree/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 7.2.二叉树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_2_binary_tree/</link>
      <pubDate>Thu, 12 Jun 2014 10:51:19 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_2_binary_tree/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 7.1.基本数据结构_栈、队列、链表、有根树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_basic_structure/</link>
      <pubDate>Thu, 12 Jun 2014 10:30:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_basic_structure/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 3.分治法实例_二分查找 和求a^b</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter03_divide/</link>
      <pubDate>Thu, 05 Jun 2014 10:20:33 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter03_divide/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 2.渐近符号、递归及解法_和连续子数组的最大和、主方法/主定理求时间复杂度</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter02_analysis/</link>
      <pubDate>Thu, 05 Jun 2014 10:16:25 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter02_analysis/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 1.算法分析: 插入排序 vs 二路归并排序</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter01_sort/</link>
      <pubDate>Tue, 03 Jun 2014 17:30:06 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter01_sort/</guid>
      <description>Sort algorithm All kinds of sort algorithms. Insertion sort CLICK ME: [code] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 #include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;string&amp;gt; using namespace</description>
    </item>
    
  </channel>
</rss>