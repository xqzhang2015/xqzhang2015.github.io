<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Server on To be foolish - xqzhang2015</title>
    <link>https://xqzhang2015.github.io/categories/web-server/</link>
    <description>Recent content in Web Server on To be foolish - xqzhang2015</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 06 Sep 2018 11:42:31 +0000</lastBuildDate>
    
	<atom:link href="https://xqzhang2015.github.io/categories/web-server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The journal of linux logrotate</title>
      <link>https://xqzhang2015.github.io/post/arch/logrotate/</link>
      <pubDate>Thu, 06 Sep 2018 11:42:31 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/arch/logrotate/</guid>
      <description>Overview test
Linux system cronjob  cronjob: hourly, daily, &amp;hellip;  1 2  [root@xxx run]# cd /etc/cron cron.d/ cron.daily/ cron.deny cron.hourly/ cron.monthly/ crontab cron.weekly/    logrotate  1 2 3 4 5 6 7 8 9 10 11  [root@xxx cron.daily]# pwd /etc/cron.daily [root@xxx cron.daily]# cat logrotate #!/bin/sh  /usr/sbin/logrotate -s /var/lib/logrotate/logrotate.status /etc/logrotate.conf EXITVALUE=$? if [ $EXITVALUE != 0 ]; then /usr/bin/logger -t logrotate &amp;#34;ALERT exited abnormally with [$EXITVALUE]&amp;#34; fi exit 0   Knowledge crontab knowledge Job format By default, nnCron uses the enhanced format.</description>
    </item>
    
    <item>
      <title>The journal of debug lightty access log not appending</title>
      <link>https://xqzhang2015.github.io/post/arch/lightty/</link>
      <pubDate>Mon, 03 Sep 2018 11:42:31 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/arch/lightty/</guid>
      <description>What I learned Why O_APPEND is needed: multiple process write the same file O_APPEND Before each write(2), the file offset is positioned at the end of the file, as if with lseek(2). The modification of the file offset and the write operation are performed as a single atomic step. fcntl(fd, F_SETFL, O_NONBLOCK); It will clear all file status flags firstly. UML: user mode linux With it, we could GDB linux</description>
    </item>
    
  </channel>
</rss>