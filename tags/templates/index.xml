<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Templates on To be foolish - xqzhang2015</title>
    <link>https://xqzhang2015.github.io/tags/templates/</link>
    <description>Recent content in Templates on To be foolish - xqzhang2015</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xqzhang2015.github.io/tags/templates/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://xqzhang2015.github.io/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 15.动态规划</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter15_dynamic_schedule/</link>
      <pubDate>Sat, 30 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter15_dynamic_schedule/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 10.平衡搜索树-红黑树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter10_rbtree/</link>
      <pubDate>Sun, 15 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter10_rbtree/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 9.二叉搜索树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter09_search_tree/</link>
      <pubDate>Thu, 12 Jun 2014 10:57:12 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter09_search_tree/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 7.2.二叉树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_2_binary_tree/</link>
      <pubDate>Thu, 12 Jun 2014 10:51:19 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_2_binary_tree/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 7.1.基本数据结构_栈、队列、链表、有根树</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_basic_structure/</link>
      <pubDate>Thu, 12 Jun 2014 10:30:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter07_basic_structure/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 3.分治法实例_二分查找 和求a^b</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter03_divide/</link>
      <pubDate>Thu, 05 Jun 2014 10:20:33 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter03_divide/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 2.渐近符号、递归及解法_和连续子数组的最大和、主方法/主定理求时间复杂度</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter02_analysis/</link>
      <pubDate>Thu, 05 Jun 2014 10:16:25 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter02_analysis/</guid>
      <description>Todo.</description>
    </item>
    
    <item>
      <title>MIT Algorithm - 1.算法分析: 插入排序 vs 二路归并排序</title>
      <link>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter01_sort/</link>
      <pubDate>Tue, 03 Jun 2014 17:30:06 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/algorithm/mit_algorithm_chapter01_sort/</guid>
      <description>Sort algorithm All kinds of sort algorithms.
Insertion sort 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  #include &amp;lt;iostream&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;string&amp;gt; using namespace std; template &amp;lt;typename T&amp;gt; int insertionSort(T *data, int n) { if (data == NULL || n &amp;lt;= 0) { return -1; } for (int i = 1; i &amp;lt; n; i++) { T key = data[i]; int j = i - 1; for (; j &amp;gt;= 0 &amp;amp;&amp;amp; data[j] &amp;gt; key; j--) { data[j + 1] = data[j]; } data[j + 1] = key; } return 0; } int main(void) { int data[6] = {5, 3, 1, 9, 7, -1}; insertionSort&amp;lt;int&amp;gt;(data, sizeof(data) / sizeof(*data)); for (uint i = 0; i &amp;lt; sizeof(data) / sizeof(*data); i++) { cout &amp;lt;&amp;lt; data[i] &amp;lt;&amp;lt; &amp;#34; &amp;#34;; } cout &amp;lt;&amp;lt; endl; std::vector&amp;lt;int&amp;gt; vT; int i; while (cin &amp;gt;&amp;gt; i) { vT.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://xqzhang2015.github.io/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://xqzhang2015.github.io/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xqzhang2015.github.io/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
1 2 3  ▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png   should become
1 2 3 4  ▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png   Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>